{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport React from 'react';\nimport { isAudioAttachment, isFileAttachment, isGalleryAttachmentType, isImageAttachment, isMediaAttachment, renderAudio, renderCard, renderFile, renderGallery, renderImage, renderMedia } from './utils';\n/**\n * A component used for rendering message attachments. By default, the component supports: AttachmentActions, Audio, Card, File, Gallery, Image, and Video\n */\n\nexport var Attachment = function (props) {\n  var attachments = props.attachments,\n      rest = __rest(props, [\"attachments\"]);\n\n  var gallery = {\n    images: attachments === null || attachments === void 0 ? void 0 : attachments.filter(function (attachment) {\n      return attachment.type === 'image' && !(attachment.og_scrape_url || attachment.title_link);\n    }),\n    type: 'gallery'\n  };\n  var newAttachments = gallery.images.length >= 2 ? __spreadArray(__spreadArray([], attachments.filter(function (attachment) {\n    return !(attachment.type === 'image' && !(attachment.og_scrape_url || attachment.title_link));\n  })), [gallery]) : attachments;\n  return React.createElement(React.Fragment, null, newAttachments.map(function (attachment) {\n    if (isGalleryAttachmentType(attachment)) {\n      return renderGallery(__assign(__assign({}, rest), {\n        attachment: attachment\n      }));\n    }\n\n    if (isImageAttachment(attachment)) {\n      return renderImage(__assign(__assign({}, rest), {\n        attachment: attachment\n      }));\n    }\n\n    if (isAudioAttachment(attachment)) {\n      return renderAudio(__assign(__assign({}, rest), {\n        attachment: attachment\n      }));\n    }\n\n    if (isFileAttachment(attachment)) {\n      return renderFile(__assign(__assign({}, rest), {\n        attachment: attachment\n      }));\n    }\n\n    if (isMediaAttachment(attachment)) {\n      return renderMedia(__assign(__assign({}, rest), {\n        attachment: attachment\n      }));\n    }\n\n    return renderCard(__assign(__assign({}, rest), {\n      attachment: attachment\n    }));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}