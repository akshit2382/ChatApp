{"ast":null,"code":"import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar QuotedMessagePreviewHeader = function () {\n  var setQuotedMessage = useChannelActionContext('QuotedMessagePreview').setQuotedMessage;\n  var t = useTranslationContext('QuotedMessagePreview').t;\n  return React.createElement(\"div\", {\n    className: 'quoted-message-preview-header'\n  }, React.createElement(\"div\", null, t('Reply to Message')), React.createElement(\"button\", {\n    \"aria-label\": 'Cancel Reply',\n    className: 'str-chat__square-button',\n    onClick: function () {\n      return setQuotedMessage(undefined);\n    }\n  }, React.createElement(\"svg\", {\n    height: '10',\n    width: '10',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z',\n    fillRule: 'evenodd'\n  }))));\n};\n\nexport var QuotedMessagePreview = function (props) {\n  var _a;\n\n  var quotedMessage = props.quotedMessage;\n\n  var _b = useComponentContext('QuotedMessagePreview'),\n      Attachment = _b.Attachment,\n      ContextAvatar = _b.Avatar;\n\n  var userLanguage = useTranslationContext('QuotedMessagePreview').userLanguage;\n  var Avatar = ContextAvatar || DefaultAvatar;\n  var quotedMessageText = ((_a = quotedMessage.i18n) === null || _a === void 0 ? void 0 : _a[userLanguage + \"_text\"]) || quotedMessage.text; // @ts-expect-error\n\n  var quotedMessageAttachment = quotedMessage.attachments.length ? // @ts-expect-error\n  quotedMessage.attachments[0] : null;\n  if (!quotedMessageText && !quotedMessageAttachment) return null;\n  return React.createElement(\"div\", {\n    className: 'quoted-message-preview'\n  }, React.createElement(QuotedMessagePreviewHeader, null), React.createElement(\"div\", {\n    className: 'quoted-message-preview-content'\n  }, quotedMessage.user && React.createElement(Avatar, {\n    image: quotedMessage.user.image,\n    name: quotedMessage.user.name || quotedMessage.user.id,\n    size: 20,\n    user: quotedMessage.user\n  }), React.createElement(\"div\", {\n    className: 'quoted-message-preview-content-inner'\n  }, quotedMessageAttachment && React.createElement(Attachment, {\n    attachments: [quotedMessageAttachment]\n  }), React.createElement(\"div\", null, quotedMessageText))));\n};","map":null,"metadata":{},"sourceType":"module"}