{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { AttachmentActions as DefaultAttachmentActions } from './AttachmentActions';\nimport { Audio as DefaultAudio } from './Audio';\nimport { Card as DefaultCard } from './Card';\nimport { FileAttachment as DefaultFile } from './FileAttachment';\nimport { Gallery as DefaultGallery, ImageComponent as DefaultImage } from '../Gallery';\nexport var SUPPORTED_VIDEO_FORMATS = ['video/mp4', 'video/ogg', 'video/webm', 'video/quicktime'];\nexport var isGalleryAttachmentType = function (output) {\n  return output.images != null;\n};\nexport var isAudioAttachment = function (attachment) {\n  return attachment.type === 'audio';\n};\nexport var isFileAttachment = function (attachment) {\n  return attachment.type === 'file' || attachment.mime_type && SUPPORTED_VIDEO_FORMATS.indexOf(attachment.mime_type) === -1 && attachment.type !== 'video';\n};\nexport var isImageAttachment = function (attachment) {\n  return attachment.type === 'image' && !attachment.title_link && !attachment.og_scrape_url;\n};\nexport var isMediaAttachment = function (attachment) {\n  return attachment.mime_type && SUPPORTED_VIDEO_FORMATS.indexOf(attachment.mime_type) !== -1 || attachment.type === 'video';\n};\nexport var renderAttachmentWithinContainer = function (props) {\n  var attachment = props.attachment,\n      children = props.children,\n      componentType = props.componentType;\n  var extra = '';\n\n  if (!isGalleryAttachmentType(attachment)) {\n    extra = componentType === 'card' && !(attachment === null || attachment === void 0 ? void 0 : attachment.image_url) && !(attachment === null || attachment === void 0 ? void 0 : attachment.thumb_url) ? 'no-image' : attachment && attachment.actions && attachment.actions.length ? 'actions' : '';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-attachment str-chat__message-attachment--\" + componentType + \" str-chat__message-attachment--\" + ((attachment === null || attachment === void 0 ? void 0 : attachment.type) || '') + \" str-chat__message-attachment--\" + componentType + \"--\" + extra,\n    key: (isGalleryAttachmentType(attachment) ? '' : attachment === null || attachment === void 0 ? void 0 : attachment.id) + \"-\" + ((attachment === null || attachment === void 0 ? void 0 : attachment.type) || 'none') + \" \"\n  }, children);\n};\nexport var renderAttachmentActions = function (props) {\n  var _a;\n\n  var actionHandler = props.actionHandler,\n      attachment = props.attachment,\n      _b = props.AttachmentActions,\n      AttachmentActions = _b === void 0 ? DefaultAttachmentActions : _b;\n  if (!((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length)) return null;\n  return React.createElement(AttachmentActions, __assign({}, attachment, {\n    actionHandler: function (event, name, value) {\n      return actionHandler === null || actionHandler === void 0 ? void 0 : actionHandler(event, name, value);\n    },\n    actions: attachment.actions,\n    id: attachment.id || '',\n    key: \"key-actions-\" + attachment.id,\n    text: attachment.text || ''\n  }));\n};\nexport var renderGallery = function (props) {\n  var attachment = props.attachment,\n      _a = props.Gallery,\n      Gallery = _a === void 0 ? DefaultGallery : _a;\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(Gallery, {\n      images: attachment.images || [],\n      key: 'gallery'\n    }),\n    componentType: 'gallery'\n  });\n};\nexport var renderImage = function (props) {\n  var attachment = props.attachment,\n      _a = props.Image,\n      Image = _a === void 0 ? DefaultImage : _a;\n\n  if (attachment.actions && attachment.actions.length) {\n    return renderAttachmentWithinContainer({\n      attachment: attachment,\n      children: React.createElement(\"div\", {\n        className: 'str-chat__attachment',\n        key: \"key-image-\" + attachment.id\n      }, React.createElement(Image, __assign({}, attachment)), renderAttachmentActions(props)),\n      componentType: 'image'\n    });\n  }\n\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(Image, __assign({}, attachment, {\n      key: \"key-image-\" + attachment.id\n    })),\n    componentType: 'image'\n  });\n};\nexport var renderCard = function (props) {\n  var attachment = props.attachment,\n      _a = props.Card,\n      Card = _a === void 0 ? DefaultCard : _a;\n\n  if (attachment.actions && attachment.actions.length) {\n    return renderAttachmentWithinContainer({\n      attachment: attachment,\n      children: React.createElement(\"div\", {\n        className: 'str-chat__attachment',\n        key: \"key-image-\" + attachment.id\n      }, React.createElement(Card, __assign({}, attachment, {\n        key: \"key-card-\" + attachment.id\n      })), renderAttachmentActions(props)),\n      componentType: 'card'\n    });\n  }\n\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(Card, __assign({}, attachment, {\n      key: \"key-card-\" + attachment.id\n    })),\n    componentType: 'card'\n  });\n};\nexport var renderFile = function (props) {\n  var attachment = props.attachment,\n      _a = props.File,\n      File = _a === void 0 ? DefaultFile : _a;\n  if (!attachment.asset_url) return null;\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(File, {\n      attachment: attachment,\n      key: \"key-file-\" + attachment.id\n    }),\n    componentType: 'file'\n  });\n};\nexport var renderAudio = function (props) {\n  var attachment = props.attachment,\n      _a = props.Audio,\n      Audio = _a === void 0 ? DefaultAudio : _a;\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(\"div\", {\n      className: 'str-chat__attachment',\n      key: \"key-video-\" + attachment.id\n    }, React.createElement(Audio, {\n      og: attachment\n    })),\n    componentType: 'audio'\n  });\n};\nexport var renderMedia = function (props) {\n  var _a;\n\n  var attachment = props.attachment,\n      _b = props.Media,\n      Media = _b === void 0 ? ReactPlayer : _b;\n\n  if ((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length) {\n    return renderAttachmentWithinContainer({\n      attachment: attachment,\n      children: React.createElement(\"div\", {\n        className: 'str-chat__attachment str-chat__attachment-media',\n        key: \"key-video-\" + attachment.id\n      }, React.createElement(\"div\", {\n        className: 'str-chat__player-wrapper'\n      }, React.createElement(Media, {\n        className: 'react-player',\n        controls: true,\n        height: '100%',\n        url: attachment.asset_url,\n        width: '100%'\n      })), renderAttachmentActions(props)),\n      componentType: 'media'\n    });\n  }\n\n  return renderAttachmentWithinContainer({\n    attachment: attachment,\n    children: React.createElement(\"div\", {\n      className: 'str-chat__player-wrapper',\n      key: \"key-video-\" + attachment.id\n    }, React.createElement(Media, {\n      className: 'react-player',\n      controls: true,\n      height: '100%',\n      url: attachment.asset_url,\n      width: '100%'\n    })),\n    componentType: 'media'\n  });\n};","map":null,"metadata":{},"sourceType":"module"}