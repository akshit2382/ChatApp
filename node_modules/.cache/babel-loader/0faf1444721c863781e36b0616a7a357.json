{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport Dayjs from 'dayjs';\nimport { isLanguageSupported } from '../../../context/TranslationContext';\nimport { Streami18n } from '../../../i18n';\nimport { version } from '../../../version';\nexport var useChat = function (_a) {\n  var _b;\n\n  var client = _a.client,\n      _c = _a.defaultLanguage,\n      defaultLanguage = _c === void 0 ? 'en' : _c,\n      i18nInstance = _a.i18nInstance,\n      initialNavOpen = _a.initialNavOpen;\n\n  var _d = useState({\n    t: function (key) {\n      return key;\n    },\n    tDateTimeParser: function (input) {\n      return Dayjs(input);\n    },\n    userLanguage: 'en'\n  }),\n      translators = _d[0],\n      setTranslators = _d[1];\n\n  var _e = useState(),\n      channel = _e[0],\n      setChannel = _e[1];\n\n  var _f = useState([]),\n      mutes = _f[0],\n      setMutes = _f[1];\n\n  var _g = useState(initialNavOpen),\n      navOpen = _g[0],\n      setNavOpen = _g[1];\n\n  var clientMutes = (_b = client.user) === null || _b === void 0 ? void 0 : _b.mutes;\n\n  var closeMobileNav = function () {\n    return setNavOpen(false);\n  };\n\n  var openMobileNav = function () {\n    return setTimeout(function () {\n      return setNavOpen(true);\n    }, 100);\n  };\n\n  var appSettings = useRef(null);\n\n  var getAppSettings = function () {\n    if (appSettings.current) {\n      return appSettings.current;\n    }\n\n    appSettings.current = client.getAppSettings();\n    return appSettings.current;\n  };\n\n  useEffect(function () {\n    if (client) {\n      var userAgent = client.getUserAgent();\n\n      if (!userAgent.includes('stream-chat-react')) {\n        // result looks like: 'stream-chat-react-2.3.2-stream-chat-javascript-client-browser-2.2.2'\n        client.setUserAgent(\"stream-chat-react-\" + version + \"-\" + userAgent);\n      }\n    }\n  }, [client]);\n  useEffect(function () {\n    setMutes(clientMutes || []);\n\n    var handleEvent = function (event) {\n      var _a;\n\n      setMutes(((_a = event.me) === null || _a === void 0 ? void 0 : _a.mutes) || []);\n    };\n\n    client.on('notification.mutes_updated', handleEvent);\n    return function () {\n      return client.off('notification.mutes_updated', handleEvent);\n    };\n  }, [clientMutes === null || clientMutes === void 0 ? void 0 : clientMutes.length]);\n  useEffect(function () {\n    var _a;\n\n    var userLanguage = (_a = client.user) === null || _a === void 0 ? void 0 : _a.language;\n\n    if (!userLanguage) {\n      var browserLanguage = window.navigator.language.slice(0, 2); // just get language code, not country-specific version\n\n      userLanguage = isLanguageSupported(browserLanguage) ? browserLanguage : defaultLanguage;\n    }\n\n    var streami18n = i18nInstance || new Streami18n({\n      language: userLanguage\n    });\n    streami18n.registerSetLanguageCallback(function (t) {\n      return setTranslators(function (prevTranslator) {\n        return __assign(__assign({}, prevTranslator), {\n          t: t\n        });\n      });\n    });\n    streami18n.getTranslators().then(function (translator) {\n      setTranslators(__assign(__assign({}, translator), {\n        userLanguage: userLanguage || defaultLanguage\n      }));\n    });\n  }, [i18nInstance]);\n  var setActiveChannel = useCallback(function (activeChannel, watchers, event) {\n    if (watchers === void 0) {\n      watchers = {};\n    }\n\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event && event.preventDefault) event.preventDefault();\n            if (!(activeChannel && Object.keys(watchers).length)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , activeChannel.query({\n              watch: true,\n              watchers: watchers\n            })];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            setChannel(activeChannel);\n            closeMobileNav();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, []);\n  return {\n    channel: channel,\n    closeMobileNav: closeMobileNav,\n    getAppSettings: getAppSettings,\n    mutes: mutes,\n    navOpen: navOpen,\n    openMobileNav: openMobileNav,\n    setActiveChannel: setActiveChannel,\n    translators: translators\n  };\n};","map":null,"metadata":{},"sourceType":"module"}