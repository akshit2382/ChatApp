{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\n\nvar UnMemoizedConnectionStatus = function () {\n  var client = useChatContext('ConnectionStatus').client;\n  var t = useTranslationContext('ConnectionStatus').t;\n\n  var _a = useState(true),\n      online = _a[0],\n      setOnline = _a[1];\n\n  useEffect(function () {\n    var connectionChanged = function (_a) {\n      var _b = _a.online,\n          onlineStatus = _b === void 0 ? false : _b;\n\n      if (online !== onlineStatus) {\n        setOnline(onlineStatus);\n      }\n    };\n\n    client.on('connection.changed', connectionChanged);\n    return function () {\n      return client.off('connection.changed', connectionChanged);\n    };\n  }, [client, online]);\n  return React.createElement(CustomNotification, {\n    active: !online,\n    type: 'error'\n  }, t('Connection failure, reconnecting now...'));\n};\n\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);","map":null,"metadata":{},"sourceType":"module"}