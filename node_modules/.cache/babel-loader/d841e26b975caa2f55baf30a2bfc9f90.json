{"ast":null,"code":"import React, { useCallback, useEffect, useRef, useState } from 'react';\nvar progressUpdateInterval = 500;\n\nvar UnMemoizedAudio = function (props) {\n  var og = props.og;\n\n  var _a = useState(false),\n      isPlaying = _a[0],\n      setIsPlaying = _a[1];\n\n  var _b = useState(0),\n      progress = _b[0],\n      setProgress = _b[1];\n\n  var audioRef = useRef(null);\n  var updateProgress = useCallback(function () {\n    if (audioRef.current !== null) {\n      var position = audioRef.current.currentTime;\n      var duration = audioRef.current.duration;\n      var currentProgress = 100 / duration * position;\n      setProgress(currentProgress);\n\n      if (position === duration) {\n        setIsPlaying(false);\n      }\n    }\n  }, [audioRef]);\n  useEffect(function () {\n    if (audioRef.current !== null) {\n      if (isPlaying) {\n        audioRef.current.play();\n        var interval_1 = setInterval(updateProgress, progressUpdateInterval);\n        return function () {\n          return clearInterval(interval_1);\n        };\n      }\n\n      audioRef.current.pause();\n    }\n\n    return;\n  }, [isPlaying, updateProgress]);\n  var asset_url = og.asset_url,\n      description = og.description,\n      image_url = og.image_url,\n      text = og.text,\n      title = og.title;\n  return React.createElement(\"div\", {\n    className: 'str-chat__audio'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__audio__wrapper'\n  }, React.createElement(\"audio\", {\n    ref: audioRef\n  }, React.createElement(\"source\", {\n    \"data-testid\": 'audio-source',\n    src: asset_url,\n    type: 'audio/mp3'\n  })), React.createElement(\"div\", {\n    className: 'str-chat__audio__image'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__audio__image--overlay'\n  }, !isPlaying ? React.createElement(\"button\", {\n    className: 'str-chat__audio__image--button',\n    \"data-testid\": 'play-audio',\n    onClick: function () {\n      return setIsPlaying(true);\n    }\n  }, React.createElement(\"svg\", {\n    height: '40',\n    viewBox: '0 0 64 64',\n    width: '40',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M32 58c14.36 0 26-11.64 26-26S46.36 6 32 6 6 17.64 6 32s11.64 26 26 26zm0 6C14.327 64 0 49.673 0 32 0 14.327 14.327 0 32 0c17.673 0 32 14.327 32 32 0 17.673-14.327 32-32 32zm13.237-28.412L26.135 45.625a3.27 3.27 0 0 1-4.426-1.4 3.319 3.319 0 0 1-.372-1.47L21 23.36c-.032-1.823 1.41-3.327 3.222-3.358a3.263 3.263 0 0 1 1.473.322l19.438 9.36a3.311 3.311 0 0 1 .103 5.905z',\n    fillRule: 'nonzero'\n  }))) : React.createElement(\"button\", {\n    className: 'str-chat__audio__image--button',\n    \"data-testid\": 'pause-audio',\n    onClick: function () {\n      return setIsPlaying(false);\n    }\n  }, React.createElement(\"svg\", {\n    height: '40',\n    viewBox: '0 0 64 64',\n    width: '40',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M32 58.215c14.478 0 26.215-11.737 26.215-26.215S46.478 5.785 32 5.785 5.785 17.522 5.785 32 17.522 58.215 32 58.215zM32 64C14.327 64 0 49.673 0 32 0 14.327 14.327 0 32 0c17.673 0 32 14.327 32 32 0 17.673-14.327 32-32 32zm-7.412-45.56h2.892a2.17 2.17 0 0 1 2.17 2.17v23.865a2.17 2.17 0 0 1-2.17 2.17h-2.892a2.17 2.17 0 0 1-2.17-2.17V20.61a2.17 2.17 0 0 1 2.17-2.17zm12.293 0h2.893a2.17 2.17 0 0 1 2.17 2.17v23.865a2.17 2.17 0 0 1-2.17 2.17h-2.893a2.17 2.17 0 0 1-2.17-2.17V20.61a2.17 2.17 0 0 1 2.17-2.17z',\n    fillRule: 'nonzero'\n  })))), image_url && React.createElement(\"img\", {\n    alt: \"\" + description,\n    src: image_url\n  })), React.createElement(\"div\", {\n    className: 'str-chat__audio__content'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__audio__content--title'\n  }, React.createElement(\"strong\", null, title)), React.createElement(\"span\", {\n    className: 'str-chat__audio__content--subtitle'\n  }, text), React.createElement(\"div\", {\n    className: 'str-chat__audio__content--progress'\n  }, React.createElement(\"div\", {\n    \"data-testid\": 'audio-progress',\n    style: {\n      width: progress + \"%\"\n    }\n  })))));\n};\n/**\n * Audio attachment with play/pause button and progress bar\n */\n\n\nexport var Audio = React.memo(UnMemoizedAudio);","map":null,"metadata":{},"sourceType":"module"}