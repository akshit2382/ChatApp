{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nexport function useNewMessageNotification(messages, currentUserId) {\n  var _a = useState(false),\n      newMessagesNotification = _a[0],\n      setNewMessagesNotification = _a[1];\n  /**\n   * use the flag to avoid the initial \"new messages\" quick blink\n   */\n\n\n  var didMount = useRef(false);\n  var lastMessageId = useRef('');\n  var atBottom = useRef(false);\n  useEffect(function () {\n    var _a;\n    /* handle scrolling behavior for new messages */\n\n\n    if (!(messages === null || messages === void 0 ? void 0 : messages.length)) return;\n    var lastMessage = messages[messages.length - 1];\n    var prevMessageId = lastMessageId.current;\n    lastMessageId.current = lastMessage.id || ''; // update last message id\n\n    /* do nothing if new messages are loaded from top(loadMore)  */\n\n    if (lastMessage.id === prevMessageId) return;\n    /* if list is already at the bottom return, followOutput will do the job */\n\n    if (atBottom.current) return;\n    /* if the new message belongs to current user scroll to bottom */\n\n    if (((_a = lastMessage.user) === null || _a === void 0 ? void 0 : _a.id) !== currentUserId && didMount.current) {\n      /* otherwise just show newMessage notification  */\n      setNewMessagesNotification(true);\n    }\n\n    didMount.current = true;\n  }, [currentUserId, messages]);\n  return {\n    atBottom: atBottom,\n    newMessagesNotification: newMessagesNotification,\n    setNewMessagesNotification: setNewMessagesNotification\n  };\n}","map":null,"metadata":{},"sourceType":"module"}