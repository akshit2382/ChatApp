{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Akshit\\\\Desktop\\\\ChatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Akshit\\\\Desktop\\\\ChatApp\\\\src\\\\Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, Channel, ChannelHeader, ChannelList, LoadingIndicator, MessageInput, MessageList, Thread, Window } from 'stream-chat-react'; // import 'stream-chat-react/dist/css/index.css';\n\nlet userToken = \"\";\nif (localStorage.getItem(\"username\") == 'akshit') userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYWtzaGl0In0.fWr9z1b8O1CYfxPRQC1z7JOWoQM8Z3F1S3Z7C4wdG3E\";else if (localStorage.getItem(\"username\") == 'user1') userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcjEifQ.dh0-qZMKYXO44KLIqnUE47s1d6KyNkoi_88p0KHzfGY\";else if (localStorage.getItem(\"username\") == 'user2') userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcjIifQ.PiZE2vc6e9qgJO_GTnOxPZNC1R7OIKGFP_QCYxhtdjw\";\nconst filters = {\n  type: 'messaging',\n  members: {\n    $in: ['akshit', 'user1', 'user2']\n  }\n};\nconst sort = {\n  last_message_at: -1\n}; // console.log(\"Hello\");\n\nconst ChatApp = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        chatClient = _useState2[0],\n        setChatClient = _useState2[1];\n\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('chbyjnv2st7v'); // const serverClient = StreamChat.getInstance('chbyjnv2st7v','wh8na75jcfk443vvavpghkut4z974vx5p93xt47e7drj42p7dy62c9pku3mzukrr');\n      // const userToken = client.createToken(localStorage.getItem(\"username\"))\n\n      console.log(userToken);\n      await client.connectUser({\n        id: localStorage.getItem(\"username\"),\n        name: localStorage.getItem(\"username\"),\n        image: 'https://thumbs.dreamstime.com/b/default-avatar-profile-image-vector-social-media-user-icon-potrait-182347582.jpg'\n      }, userToken);\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return React.createElement(LoadingIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Chat, {\n    client: chatClient,\n    theme: \"messaging light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(ChannelList, {\n    filters: filters,\n    sort: sort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Channel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Window, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ChannelHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(MessageList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(MessageInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Thread, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nexport default ChatApp;","map":{"version":3,"sources":["C:/Users/Akshit/Desktop/ChatApp/src/Chat.js"],"names":["React","useEffect","useState","StreamChat","Chat","Channel","ChannelHeader","ChannelList","LoadingIndicator","MessageInput","MessageList","Thread","Window","userToken","localStorage","getItem","filters","type","members","$in","sort","last_message_at","ChatApp","props","chatClient","setChatClient","initChat","client","getInstance","console","log","connectUser","id","name","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAAQC,IAAR,EAAaC,OAAb,EAAqBC,aAArB,EAAmCC,WAAnC,EAA+CC,gBAA/C,EAAgEC,YAAhE,EAA6EC,WAA7E,EAAyFC,MAAzF,EAAgGC,MAAhG,QAA8G,mBAA9G,C,CAEA;;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAkC,QAArC,EACEF,SAAS,GAAG,8GAAZ,CADF,KAEK,IAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAkC,OAArC,EACHF,SAAS,GAAG,6GAAZ,CADG,KAEA,IAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAkC,OAArC,EACHF,SAAS,GAAG,6GAAZ;AAEF,MAAMG,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,WADQ;AAEdC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC,QAAD,EAAU,OAAV,EAAkB,OAAlB;AAAP;AAFK,CAAhB;AAIA,MAAMC,IAAI,GAAG;AAAEC,EAAAA,eAAe,EAAE,CAAC;AAApB,CAAb,C,CACA;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACWrB,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,QAClBsB,UADkB;AAAA,QACNC,aADM;;AAGzBxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,MAAM,GAAGxB,UAAU,CAACyB,WAAX,CAAuB,cAAvB,CAAf,CAD2B,CAE3B;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACA,YAAMc,MAAM,CAACI,WAAP,CACJ;AACEC,QAAAA,EAAE,EAAElB,YAAY,CAACC,OAAb,CAAqB,UAArB,CADN;AAEEkB,QAAAA,IAAI,EAAEnB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFR;AAGEmB,QAAAA,KAAK,EACH;AAJJ,OADI,EAOJrB,SAPI,CAAN;AAUAY,MAAAA,aAAa,CAACE,MAAD,CAAb;AACD,KAhBD;;AAkBAD,IAAAA,QAAQ;AACT,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,MAAI,CAACF,UAAL,EAAiB;AACf,WAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEA,UAAd;AAA0B,IAAA,KAAK,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAER,OAAtB;AAA+B,IAAA,IAAI,EAAEI,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF;AAaD,CA1CD;;AA4CA,eAAeE,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\n\nimport {Chat,Channel,ChannelHeader,ChannelList,LoadingIndicator,MessageInput,MessageList,Thread,Window,} from 'stream-chat-react';\n\n// import 'stream-chat-react/dist/css/index.css';\nlet userToken = \"\";\nif(localStorage.getItem(\"username\")=='akshit')\n  userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYWtzaGl0In0.fWr9z1b8O1CYfxPRQC1z7JOWoQM8Z3F1S3Z7C4wdG3E\";\nelse if(localStorage.getItem(\"username\")=='user1')\n  userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcjEifQ.dh0-qZMKYXO44KLIqnUE47s1d6KyNkoi_88p0KHzfGY\";\nelse if(localStorage.getItem(\"username\")=='user2')\n  userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcjIifQ.PiZE2vc6e9qgJO_GTnOxPZNC1R7OIKGFP_QCYxhtdjw\";\n\nconst filters = {\n  type: 'messaging',\n  members: { $in: ['akshit','user1','user2'] },\n};\nconst sort = { last_message_at: -1 };\n// console.log(\"Hello\");\nconst ChatApp = (props) => {\n  const [chatClient, setChatClient] = useState(null);\n\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('chbyjnv2st7v');\n      // const serverClient = StreamChat.getInstance('chbyjnv2st7v','wh8na75jcfk443vvavpghkut4z974vx5p93xt47e7drj42p7dy62c9pku3mzukrr');\n      // const userToken = client.createToken(localStorage.getItem(\"username\"))\n      console.log(userToken);\n      await client.connectUser(\n        {\n          id: localStorage.getItem(\"username\"),\n          name: localStorage.getItem(\"username\"),\n          image:\n            'https://thumbs.dreamstime.com/b/default-avatar-profile-image-vector-social-media-user-icon-potrait-182347582.jpg',\n        },\n        userToken\n      );\n\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <Chat client={chatClient} theme=\"messaging light\">\n      <ChannelList filters={filters} sort={sort} />\n      <Channel>\n        <Window>\n          <ChannelHeader />\n          <MessageList />\n          <MessageInput />\n        </Window>\n        <Thread />\n      </Channel>\n    </Chat>\n  );\n};\n\nexport default ChatApp ;\n"]},"metadata":{},"sourceType":"module"}