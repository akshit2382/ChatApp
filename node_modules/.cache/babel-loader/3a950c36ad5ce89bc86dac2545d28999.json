{"ast":null,"code":"import React, { useMemo, useState } from 'react';\nimport { ModalComponent as ModalWrapper } from './ModalWrapper';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedGallery = function (props) {\n  var images = props.images;\n\n  var _a = useState(0),\n      index = _a[0],\n      setIndex = _a[1];\n\n  var _b = useState(false),\n      modalOpen = _b[0],\n      setModalOpen = _b[1];\n\n  var t = useTranslationContext('Gallery').t;\n\n  var toggleModal = function (selectedIndex) {\n    if (modalOpen) {\n      setModalOpen(false);\n    } else {\n      setIndex(selectedIndex);\n      setModalOpen(true);\n    }\n  };\n\n  var formattedArray = useMemo(function () {\n    return images.map(function (image) {\n      return {\n        original: image.image_url || image.thumb_url || '',\n        originalAlt: 'User uploaded content',\n        source: image.image_url || image.thumb_url || ''\n      };\n    });\n  }, [images]);\n  var renderImages = images.slice(0, 3).map(function (image, i) {\n    return React.createElement(\"button\", {\n      className: 'str-chat__gallery-image',\n      \"data-testid\": 'gallery-image',\n      key: \"gallery-image-\" + i,\n      onClick: function () {\n        return toggleModal(i);\n      }\n    }, React.createElement(\"img\", {\n      alt: 'User uploaded content',\n      src: image.image_url || image.thumb_url\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: \"str-chat__gallery \" + (images.length > 3 ? 'str-chat__gallery--square' : '')\n  }, renderImages, images.length > 3 && React.createElement(\"button\", {\n    className: 'str-chat__gallery-placeholder',\n    onClick: function () {\n      return toggleModal(3);\n    },\n    style: {\n      backgroundImage: \"url(\" + images[3].image_url + \")\"\n    }\n  }, React.createElement(\"p\", null, t('{{ imageCount }} more', {\n    imageCount: images.length - 3\n  }))), React.createElement(ModalWrapper, {\n    images: formattedArray,\n    index: index,\n    modalIsOpen: modalOpen,\n    toggleModal: function () {\n      return setModalOpen(!modalOpen);\n    }\n  }));\n};\n/**\n * Displays images in a simple responsive grid with a light box to view the images.\n */\n\n\nexport var Gallery = React.memo(UnMemoizedGallery);","map":null,"metadata":{},"sourceType":"module"}