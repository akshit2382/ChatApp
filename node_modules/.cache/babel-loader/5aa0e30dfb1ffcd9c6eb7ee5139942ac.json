{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useChannelHiddenListener = function (setChannels, customHandler) {\n  var client = useChatContext('useChannelHiddenListener').client;\n  useEffect(function () {\n    var handleEvent = function (event) {\n      if (customHandler && typeof customHandler === 'function') {\n        customHandler(setChannels, event);\n      } else {\n        setChannels(function (channels) {\n          var channelIndex = channels.findIndex(function (channel) {\n            return channel.cid === event.cid;\n          });\n          if (channelIndex < 0) return __spreadArray([], channels); // Remove the hidden channel from the list.s\n\n          channels.splice(channelIndex, 1);\n          return __spreadArray([], channels);\n        });\n      }\n    };\n\n    client.on('channel.hidden', handleEvent);\n    return function () {\n      client.off('channel.hidden', handleEvent);\n    };\n  }, [customHandler]);\n};","map":null,"metadata":{},"sourceType":"module"}