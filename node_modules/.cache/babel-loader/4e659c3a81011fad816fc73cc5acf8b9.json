{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useMemo } from 'react';\nimport { DefaultTriggerProvider } from './DefaultTriggerProvider';\nimport { MessageInputFlat } from './MessageInputFlat';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputState } from './hooks/useMessageInputState';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { MessageInputContextProvider } from '../../context/MessageInputContext';\n\nvar MessageInputProvider = function (props) {\n  var cooldownTimerState = useCooldownTimer();\n  var messageInputState = useMessageInputState(props);\n  var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));\n  return React.createElement(MessageInputContextProvider, {\n    value: messageInputContextValue\n  }, props.children);\n};\n\nvar UnMemoizedMessageInput = function (props) {\n  var PropInput = props.Input;\n  var dragAndDropWindow = useChannelStateContext().dragAndDropWindow;\n\n  var _a = useComponentContext('MessageInput'),\n      ContextInput = _a.Input,\n      _b = _a.TriggerProvider,\n      TriggerProvider = _b === void 0 ? DefaultTriggerProvider : _b;\n\n  var Input = PropInput || ContextInput || MessageInputFlat;\n\n  var NullProvider = function (_a) {\n    var children = _a.children;\n    return React.createElement(React.Fragment, null, children);\n  };\n\n  var OptionalMessageInputProvider = useMemo(function () {\n    return dragAndDropWindow ? NullProvider : MessageInputProvider;\n  }, [dragAndDropWindow]);\n  return React.createElement(OptionalMessageInputProvider, __assign({}, props), React.createElement(TriggerProvider, null, React.createElement(Input, null)));\n};\n/**\n * A high level component that has provides all functionality to the Input it renders.\n */\n\n\nexport var MessageInput = React.memo(UnMemoizedMessageInput);","map":null,"metadata":{},"sourceType":"module"}