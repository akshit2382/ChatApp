{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FilePreviewer, ImagePreviewer } from 'react-file-utils';\nimport { useBreakpoint } from '../Message/hooks';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nexport var UploadsPreview = function () {\n  var _a = useChannelStateContext('UploadsPreview'),\n      maxNumberOfFiles = _a.maxNumberOfFiles,\n      multipleUploads = _a.multipleUploads;\n\n  var messageInput = useMessageInputContext('UploadsPreview');\n  var fileOrder = messageInput.fileOrder,\n      fileUploads = messageInput.fileUploads,\n      imageOrder = messageInput.imageOrder,\n      imageUploads = messageInput.imageUploads,\n      numberOfUploads = messageInput.numberOfUploads,\n      removeFile = messageInput.removeFile,\n      removeImage = messageInput.removeImage,\n      text = messageInput.text,\n      uploadFile = messageInput.uploadFile,\n      uploadImage = messageInput.uploadImage,\n      uploadNewFiles = messageInput.uploadNewFiles;\n  var imagesToPreview = imageOrder.map(function (id) {\n    return imageUploads[id];\n  });\n  var filesToPreview = fileOrder.map(function (id) {\n    return fileUploads[id];\n  });\n  var device = useBreakpoint().device;\n  useEffect(function () {\n    var elements = document.getElementsByClassName('str-chat__send-button');\n    var sendButton = elements.item(0);\n\n    if (sendButton instanceof HTMLButtonElement) {\n      if (numberOfUploads && !text || device !== 'full') {\n        sendButton.style.display = 'block';\n      } else {\n        sendButton.style.display = 'none';\n      }\n    }\n  }, [device, numberOfUploads, text]);\n  return React.createElement(React.Fragment, null, imageOrder.length > 0 && React.createElement(ImagePreviewer, {\n    disabled: !multipleUploads || maxNumberOfFiles !== undefined && numberOfUploads >= maxNumberOfFiles,\n    handleFiles: uploadNewFiles,\n    handleRemove: removeImage,\n    handleRetry: uploadImage,\n    imageUploads: imagesToPreview,\n    multiple: multipleUploads\n  }), fileOrder.length > 0 && React.createElement(FilePreviewer, {\n    handleFiles: uploadNewFiles,\n    handleRemove: removeFile,\n    handleRetry: uploadFile,\n    uploads: filesToPreview\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}